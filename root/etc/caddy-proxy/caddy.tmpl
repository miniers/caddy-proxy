import /root/.caddy/vhosts/*
{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}
{{ $host }} {
  {{ range $index, $value := $containers }}
    {{ $basicauth := $value.Env.BASIC_AUTH }}
    {{ if $basicauth }}
        basicauth {{ $basicauth }}
    {{ end }}
    {{ $dnspod := $value.Env.DNSPOD_API_KEY }}
    {{ if $dnspod }}
        tls {
          dns dnspod
        }
    {{ end }}
    errors /root/.caddy/errors/{{ $host }}/errors.log {
      rotate_size 50 # Rotate after 50 MB
      rotate_age  90 # Keep rotated files for 90 days
      rotate_keep 20 # Keep at most 20 log files
    }
    {{ $addrLen := len $value.Addresses }}
    {{ if eq $addrLen 1 }}
      {{ with $address := index $value.Addresses 0 }}
      proxy / {{ $address.IP }}:{{ $address.Port }} {
        header_upstream Host {host}
        header_upstream X-Real-IP {remote}
        header_upstream X-Forwarded-For {remote}
        header_upstream X-Forwarded-Proto {scheme}
      }
      {{ end }}
    {{ else if $value.Env.VIRTUAL_PORT }}
      {{ range $i, $address := $value.Addresses }}
        {{ if eq $address.Port $value.Env.VIRTUAL_PORT }}
        proxy / {{ $address.IP }}:{{ $address.Port }} {
          header_upstream Host {host}
          header_upstream X-Real-IP {remote}
          header_upstream X-Forwarded-For {remote}
          header_upstream X-Forwarded-Proto {scheme}
        }
        {{ end }}
      {{ end }}
    {{ else }}
      {{ range $i, $address := $value.Addresses }}
        {{ if eq $address.Port "80" }}
        proxy / {{ $address.IP }}:{{ $address.Port }} {
          header_upstream Host {host}
          header_upstream X-Real-IP {remote}
          header_upstream X-Forwarded-For {remote}
          header_upstream X-Forwarded-Proto {scheme}
        }
        {{ end }}
      {{ end }}
    {{ end }}
  {{ end }}
}
{{ end }}
